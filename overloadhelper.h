
#	include "oolua.h"

#define OOLUA_OVERLOADED_MEMBER_BODY_N(mod, return_value, func , ...) \
{ \
	OOLUA_PARAMS_CONCAT(2, __VA_ARGS__) \
	typedef INTERNAL::return_type_traits<return_value > R; \
	typedef R::type (class_::*funcType )( OOLUA_PARAM_TYPE_CONCAT(__VA_ARGS__) ) mod ; \
	OOLUA::INTERNAL::Proxy_caller<R, class_, LVD::is_void< R::type >::value > \
		::call<funcType OOLUA_TPARAMS_CONCAT(__VA_ARGS__) > \
			(vm, m_this, &class_::func OOLUA_PPARAMS_CONCAT(__VA_ARGS__)); \
	OOLUA_BACK_CONCAT(__VA_ARGS__) \
	return INTERNAL::lua_return_count< Type_list<R OOLUA_RETURNS_CONCAT(__VA_ARGS__) > \
		::type> ::out; \
}

#define OOLUA_OVERLOADED_MEMBER_BODY_0(mod, return_value, func) \
{ \
	typedef INTERNAL::return_type_traits<return_value > R; \
	typedef R::type (class_::*funcType )() mod ; \
	OOLUA::INTERNAL::Proxy_caller<R, class_, LVD::is_void< R::type >::value > \
		::call< funcType>(vm, m_this, &class_::func); \
	return INTERNAL::lua_return_count< Type_list<R >::type> ::out; \
}

#		define OOLUA_MEM_FUNC_BODY(...) \
			OOLUA_VA_CONCAT OOLUA_LEFT_PAREN OOLUA_OVERLOADED_MEMBER_BODY_, OOLUA_NARG_GREATER_THAN_TWO OOLUA_LEFT_PAREN __VA_ARGS__ OOLUA_RIGHT_PAREN OOLUA_RIGHT_PAREN OOLUA_LEFT_PAREN , __VA_ARGS__ OOLUA_RIGHT_PAREN


#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(NUM) Param_helper<P##NUM >::param_is_of_type(vm, index)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_1 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(1)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_2 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_1 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(2)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_3 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_2 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(3)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_4 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_3 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(4)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_5 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_4 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(5)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_6 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_5 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(6)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_7 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_6 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(7)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_8 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_7 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(8)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_9 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_8 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(9)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_10 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_9 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(10)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_11 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_10 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(11)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_12 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_11 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(12)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_13 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_12 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(13)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_14 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_13 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(14)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_15 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_14 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(15)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_16 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_15 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(16)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_17 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_16 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(17)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_18 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_17 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(18)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_19 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_18 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(19)
#define OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_20 OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_19 && OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_NUM(20)

#define OOLUA_OVERLOADFUNC_TYPENAMES_NUM(NUM), typename P##NUM
#define OOLUA_OVERLOADFUNC_TYPENAMES_0
#define OOLUA_OVERLOADFUNC_TYPENAMES_1 OOLUA_COMMA_PREFIXED_TYPENAMES_NUM(1)
#define OOLUA_OVERLOADFUNC_TYPENAMES_2 OOLUA_OVERLOADFUNC_TYPENAMES_1  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(2)
#define OOLUA_OVERLOADFUNC_TYPENAMES_3 OOLUA_OVERLOADFUNC_TYPENAMES_2  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(3)
#define OOLUA_OVERLOADFUNC_TYPENAMES_4 OOLUA_OVERLOADFUNC_TYPENAMES_3  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(4)
#define OOLUA_OVERLOADFUNC_TYPENAMES_5 OOLUA_OVERLOADFUNC_TYPENAMES_4  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(5)
#define OOLUA_OVERLOADFUNC_TYPENAMES_6 OOLUA_OVERLOADFUNC_TYPENAMES_5  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(6)
#define OOLUA_OVERLOADFUNC_TYPENAMES_7 OOLUA_OVERLOADFUNC_TYPENAMES_6  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(7)
#define OOLUA_OVERLOADFUNC_TYPENAMES_8 OOLUA_OVERLOADFUNC_TYPENAMES_7  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(8)
#define OOLUA_OVERLOADFUNC_TYPENAMES_9 OOLUA_OVERLOADFUNC_TYPENAMES_8  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(9)
#define OOLUA_OVERLOADFUNC_TYPENAMES_10 OOLUA_OVERLOADFUNC_TYPENAMES_9  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(10)
#define OOLUA_OVERLOADFUNC_TYPENAMES_11 OOLUA_OVERLOADFUNC_TYPENAMES_10  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(11)
#define OOLUA_OVERLOADFUNC_TYPENAMES_12 OOLUA_OVERLOADFUNC_TYPENAMES_11  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(12)
#define OOLUA_OVERLOADFUNC_TYPENAMES_13 OOLUA_OVERLOADFUNC_TYPENAMES_12  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(13)
#define OOLUA_OVERLOADFUNC_TYPENAMES_14 OOLUA_OVERLOADFUNC_TYPENAMES_13  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(14)
#define OOLUA_OVERLOADFUNC_TYPENAMES_15 OOLUA_OVERLOADFUNC_TYPENAMES_14  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(15)
#define OOLUA_OVERLOADFUNC_TYPENAMES_16 OOLUA_OVERLOADFUNC_TYPENAMES_15  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(16)
#define OOLUA_OVERLOADFUNC_TYPENAMES_17 OOLUA_OVERLOADFUNC_TYPENAMES_16  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(17)
#define OOLUA_OVERLOADFUNC_TYPENAMES_18 OOLUA_OVERLOADFUNC_TYPENAMES_17  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(18)
#define OOLUA_OVERLOADFUNC_TYPENAMES_19 OOLUA_OVERLOADFUNC_TYPENAMES_18  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(19)
#define OOLUA_OVERLOADFUNC_TYPENAMES_20 OOLUA_OVERLOADFUNC_TYPENAMES_19  OOLUA_OVERLOADFUNC_TYPENAMES_NUM(20)



#define OOLUA_OVERLOAD_GENERATE_NUM(NUM) \
namespace OOLUA \
{ \
	namespace INTERNAL \
				{ \
		template<typename Class OOLUA_OVERLOADFUNC_TYPENAMES_##NUM > \
		struct Overload##NUM \
								{ \
			static bool overloadfunc(lua_State* vm) \
												{ \
				int index(2); \
				return (OOLUA_OVERLOADFUNC_PARAM_IS_OF_TYPE_##NUM!=0); \
												} \
								}; \
				} \
} 



OOLUA_OVERLOAD_GENERATE_NUM(1)
OOLUA_OVERLOAD_GENERATE_NUM(2)
OOLUA_OVERLOAD_GENERATE_NUM(3)
OOLUA_OVERLOAD_GENERATE_NUM(4)
OOLUA_OVERLOAD_GENERATE_NUM(5)
OOLUA_OVERLOAD_GENERATE_NUM(6)
OOLUA_OVERLOAD_GENERATE_NUM(7)
OOLUA_OVERLOAD_GENERATE_NUM(8)
OOLUA_OVERLOAD_GENERATE_NUM(9)
OOLUA_OVERLOAD_GENERATE_NUM(10)
OOLUA_OVERLOAD_GENERATE_NUM(11)
OOLUA_OVERLOAD_GENERATE_NUM(12)
OOLUA_OVERLOAD_GENERATE_NUM(13)
OOLUA_OVERLOAD_GENERATE_NUM(14)
OOLUA_OVERLOAD_GENERATE_NUM(15)
OOLUA_OVERLOAD_GENERATE_NUM(16)
OOLUA_OVERLOAD_GENERATE_NUM(17)
OOLUA_OVERLOAD_GENERATE_NUM(18)
OOLUA_OVERLOAD_GENERATE_NUM(19)
OOLUA_OVERLOAD_GENERATE_NUM(20)
#define OOLUA_MEM_FUNC_OVERLOADS_START(func) \
int func(lua_State* const vm) \
{ \
	int const stack_count = lua_gettop(vm);

#define OOLUA_MEM_FUNC_OVERLOADS_END \
}

#define	OOLUA_MEM_FUNC_OVERLOADS(func, overloads) \
	OOLUA_MEM_FUNC_OVERLOADS_START(func) \
	overloads \
	OOLUA_MEM_FUNC_OVERLOADS_END


#define OOLUA_MEM_FUNC_OVERLOAD(...) \
	OOLUA_VA_CONCAT OOLUA_LEFT_PAREN OOLUA_MEM_FUNC_OVERLOAD_, OOLUA_NARG_GREATER_THAN_TWO OOLUA_LEFT_PAREN __VA_ARGS__ OOLUA_RIGHT_PAREN OOLUA_RIGHT_PAREN OOLUA_LEFT_PAREN __VA_ARGS__ OOLUA_RIGHT_PAREN

#define	OOLUA_MEM_FUNC_OVERLOAD_0(return_value,func) \
	if (stack_count == 1) \
	{ \
		OOLUA_MEM_FUNC_BODY(return_value, func) \
	}

#define	OOLUA_MEM_FUNC_OVERLOAD_N(return_value,func,  ...) \
	if (stack_count - 1 == OOLUA_NARG(__VA_ARGS__)) \
	{ \
		if (OOLUA_VA_CONCAT OOLUA_LEFT_PAREN OOLUA::INTERNAL::Overload, OOLUA_NARG OOLUA_LEFT_PAREN __VA_ARGS__ OOLUA_RIGHT_PAREN OOLUA_RIGHT_PAREN <class_ VA_PARAM_TYPES OOLUA_LEFT_PAREN __VA_ARGS__ OOLUA_RIGHT_PAREN >::overloadfunc OOLUA_LEFT_PAREN vm OOLUA_RIGHT_PAREN OOLUA_RIGHT_PAREN \
		{ \
			OOLUA_MEM_FUNC_BODY OOLUA_LEFT_PAREN return_value, func, __VA_ARGS__ OOLUA_RIGHT_PAREN \
		} \
	}


